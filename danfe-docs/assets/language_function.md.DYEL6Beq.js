import{_ as a,c as n,a3 as l,o as e}from"./chunks/framework.ohJJpums.js";const u=JSON.parse('{"title":"Function","description":"","frontmatter":{},"headers":[],"relativePath":"language/function.md","filePath":"language/function.md"}'),o={name:"language/function.md"};function p(t,s,c,F,r,i){return e(),n("div",null,s[0]||(s[0]=[l(`<h1 id="function" tabindex="-1">Function <a class="header-anchor" href="#function" aria-label="Permalink to &quot;Function&quot;">​</a></h1><p>A <code>function</code> is a group of statements that together perform a task. You can divide up your code into separate functions. <br><br><code>Dnafe</code> provides numerous built-in methods that your program can call. For example, method <a href="/built-in-functions.html"><code>println()</code></a> to print the argument passed in stdout.</p><h2 id="defining-function" tabindex="-1">Defining Function <a class="header-anchor" href="#defining-function" aria-label="Permalink to &quot;Defining Function&quot;">​</a></h2><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-JJ4cm" id="tab-ChpXZ3B" checked><label data-title="English" for="tab-ChpXZ3B">English</label><input type="radio" name="group-JJ4cm" id="tab-hNwmFRa"><label data-title="Nepali" for="tab-hNwmFRa">Nepali</label></div><div class="blocks"><div class="language-danfe vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">danfe</span><pre class="shiki github-dark-high-contrast" style="background-color:#0a0c10;color:#f0f3f6;" tabindex="0"><code><span class="line"><span style="color:#FF9492;">function</span><span style="color:#DBB7FF;"> function_name</span><span style="color:#F0F3F6;">( argument1, argument2</span><span style="color:#FF9492;">...</span><span style="color:#F0F3F6;">, argumentn){</span></span>
<span class="line"><span style="color:#F0F3F6;">    function_body</span></span>
<span class="line"><span style="color:#FF9492;">    return</span><span style="color:#F0F3F6;"> result_params_comma_separated</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span>
<span class="line"></span></code></pre></div><div class="language-danfe vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">danfe</span><pre class="shiki github-dark-high-contrast" style="background-color:#0a0c10;color:#f0f3f6;" tabindex="0"><code><span class="line"><span style="color:#FF9492;">karya</span><span style="color:#DBB7FF;"> function_name</span><span style="color:#F0F3F6;">( argument1, argument2</span><span style="color:#FF9492;">...</span><span style="color:#F0F3F6;">, argumentn){</span></span>
<span class="line"><span style="color:#F0F3F6;">    function_body</span></span>
<span class="line"><span style="color:#FF9492;">    pathau</span><span style="color:#F0F3F6;"> result_params_comma_separated</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span>
<span class="line"></span></code></pre></div></div></div><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><p>Following is the source code for a function called <code>max()</code>. This function takes two parameters <code>num1</code> and <code>num2</code> and returns the maximum between the two numbers.</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-j3JKn" id="tab-Rca7pCg" checked><label data-title="Engllish" for="tab-Rca7pCg">Engllish</label><input type="radio" name="group-j3JKn" id="tab-CUE2tCd"><label data-title="Nepali" for="tab-CUE2tCd">Nepali</label></div><div class="blocks"><div class="language-danfe vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">danfe</span><pre class="shiki github-dark-high-contrast" style="background-color:#0a0c10;color:#f0f3f6;" tabindex="0"><code><span class="line"><span style="color:#FF9492;">function</span><span style="color:#DBB7FF;"> max</span><span style="color:#F0F3F6;">(num1, num2) {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">    if</span><span style="color:#F0F3F6;"> num1 </span><span style="color:#FF9492;">&gt;</span><span style="color:#DBB7FF;"> num2</span><span style="color:#F0F3F6;"> {</span></span>
<span class="line"><span style="color:#FFB757;">        result</span><span style="color:#FF9492;"> =</span><span style="color:#F0F3F6;"> num1; </span></span>
<span class="line"><span style="color:#F0F3F6;">    } </span><span style="color:#FF9492;">else</span><span style="color:#F0F3F6;"> {</span></span>
<span class="line"><span style="color:#FFB757;">        result</span><span style="color:#FF9492;"> =</span><span style="color:#F0F3F6;"> num2;</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">    return</span><span style="color:#F0F3F6;"> result; </span><span style="color:#BDC4CC;"># variable defined and returned dynamically</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span></code></pre></div><div class="language-danfe vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">danfe</span><pre class="shiki github-dark-high-contrast" style="background-color:#0a0c10;color:#f0f3f6;" tabindex="0"><code><span class="line"><span style="color:#FF9492;">karya</span><span style="color:#DBB7FF;"> max</span><span style="color:#F0F3F6;">(num1, num2) {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">    yedi</span><span style="color:#F0F3F6;"> num1 </span><span style="color:#FF9492;">&gt;</span><span style="color:#DBB7FF;"> num2</span><span style="color:#F0F3F6;"> {</span></span>
<span class="line"><span style="color:#FFB757;">        result</span><span style="color:#FF9492;"> =</span><span style="color:#F0F3F6;"> num1; </span></span>
<span class="line"><span style="color:#F0F3F6;">    } </span><span style="color:#FF9492;">natra</span><span style="color:#F0F3F6;"> {</span></span>
<span class="line"><span style="color:#FFB757;">        result</span><span style="color:#FF9492;"> =</span><span style="color:#F0F3F6;"> num2;</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">    pathau</span><span style="color:#F0F3F6;"> result; </span><span style="color:#BDC4CC;"># variable defined and returned dynamically</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span></code></pre></div></div></div><h2 id="function-arguments" tabindex="-1">Function Arguments <a class="header-anchor" href="#function-arguments" aria-label="Permalink to &quot;Function Arguments&quot;">​</a></h2><p>Function Arguments aka <code>formal parameters</code> are local variables inside the function and are created upon entry into the function and destroyed upon exit.</p><h2 id="calling-function" tabindex="-1">Calling Function <a class="header-anchor" href="#calling-function" aria-label="Permalink to &quot;Calling Function&quot;">​</a></h2><p>While creating a <code>Danfe function</code>, you give a definition of what the function has to do. To use a method, you will have to call that function to perform the defined task. <br> When a program calls a function, program control is <code>transferred</code> to the called function.</p><h3 id="main-df" tabindex="-1">main.df <a class="header-anchor" href="#main-df" aria-label="Permalink to &quot;main.df&quot;">​</a></h3><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-6NTAI" id="tab-GpiITry" checked><label data-title="Engllish" for="tab-GpiITry">Engllish</label><input type="radio" name="group-6NTAI" id="tab-DdwHiBA"><label data-title="Nepali" for="tab-DdwHiBA">Nepali</label></div><div class="blocks"><div class="language-danfe vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">danfe</span><pre class="shiki github-dark-high-contrast" style="background-color:#0a0c10;color:#f0f3f6;" tabindex="0"><code><span class="line"><span style="color:#BDC4CC;">#region max</span></span>
<span class="line"><span style="color:#FF9492;">function</span><span style="color:#DBB7FF;"> max</span><span style="color:#F0F3F6;">(num1, num2) {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">    if</span><span style="color:#F0F3F6;"> num1 </span><span style="color:#FF9492;">&gt;</span><span style="color:#DBB7FF;"> num2</span><span style="color:#F0F3F6;"> {</span></span>
<span class="line"><span style="color:#FFB757;">        result</span><span style="color:#FF9492;"> =</span><span style="color:#F0F3F6;"> num1; </span></span>
<span class="line"><span style="color:#F0F3F6;">    } </span><span style="color:#FF9492;">else</span><span style="color:#F0F3F6;"> {</span></span>
<span class="line"><span style="color:#FFB757;">        result</span><span style="color:#FF9492;"> =</span><span style="color:#F0F3F6;"> num2;</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">    return</span><span style="color:#F0F3F6;"> result; </span><span style="color:#BDC4CC;"># variable defined and returned dynamically</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span>
<span class="line"><span style="color:#BDC4CC;">#endregion max</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># Calling Function</span></span>
<span class="line"><span style="color:#FF9492;">println</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;The maximum of the two numbers is &quot;</span><span style="color:#F0F3F6;">,</span><span style="color:#DBB7FF;">max</span><span style="color:#F0F3F6;">(</span><span style="color:#91CBFF;">10</span><span style="color:#F0F3F6;">,</span><span style="color:#91CBFF;">4</span><span style="color:#F0F3F6;">))</span></span>
<span class="line"><span style="color:#FF9492;">println</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;The maximum of the two numbers is &quot;</span><span style="color:#F0F3F6;">,</span><span style="color:#DBB7FF;">max</span><span style="color:#F0F3F6;">(</span><span style="color:#91CBFF;">5</span><span style="color:#F0F3F6;">,</span><span style="color:#91CBFF;">6</span><span style="color:#F0F3F6;">))</span></span></code></pre></div><div class="language-danfe vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">danfe</span><pre class="shiki github-dark-high-contrast" style="background-color:#0a0c10;color:#f0f3f6;" tabindex="0"><code><span class="line"><span style="color:#BDC4CC;">#region max</span></span>
<span class="line"><span style="color:#FF9492;">karya</span><span style="color:#DBB7FF;"> max</span><span style="color:#F0F3F6;">(num1, num2) {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">    yedi</span><span style="color:#F0F3F6;"> num1 </span><span style="color:#FF9492;">&gt;</span><span style="color:#DBB7FF;"> num2</span><span style="color:#F0F3F6;"> {</span></span>
<span class="line"><span style="color:#FFB757;">        result</span><span style="color:#FF9492;"> =</span><span style="color:#F0F3F6;"> num1; </span></span>
<span class="line"><span style="color:#F0F3F6;">    } </span><span style="color:#FF9492;">natra</span><span style="color:#F0F3F6;"> {</span></span>
<span class="line"><span style="color:#FFB757;">        result</span><span style="color:#FF9492;"> =</span><span style="color:#F0F3F6;"> num2;</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">    pathau</span><span style="color:#F0F3F6;"> result; </span><span style="color:#BDC4CC;"># variable defined and returned dynamically</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span>
<span class="line"><span style="color:#BDC4CC;">#endregion max</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># Calling Function</span></span>
<span class="line"><span style="color:#DBB7FF;">dekhauln</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;The maximum of the two numbers is &quot;</span><span style="color:#F0F3F6;">,</span><span style="color:#DBB7FF;">max</span><span style="color:#F0F3F6;">(</span><span style="color:#91CBFF;">10</span><span style="color:#F0F3F6;">,</span><span style="color:#91CBFF;">4</span><span style="color:#F0F3F6;">))</span></span>
<span class="line"><span style="color:#DBB7FF;">dekhauln</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;The maximum of the two numbers is &quot;</span><span style="color:#F0F3F6;">,</span><span style="color:#DBB7FF;">max</span><span style="color:#F0F3F6;">(</span><span style="color:#91CBFF;">5</span><span style="color:#F0F3F6;">,</span><span style="color:#91CBFF;">6</span><span style="color:#F0F3F6;">))</span></span></code></pre></div></div></div><div class="language-md vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki github-dark-high-contrast" style="background-color:#0a0c10;color:#f0f3f6;" tabindex="0"><code><span class="line"><span style="color:#91CBFF;font-weight:bold;"># Output:</span></span>
<span class="line"><span style="color:#F0F3F6;">The maximum of the two numbers is 10</span></span>
<span class="line"><span style="color:#F0F3F6;">The maximum of the two numbers is 6</span></span>
<span class="line"></span></code></pre></div><h2 id="nested-function" tabindex="-1">Nested Function <a class="header-anchor" href="#nested-function" aria-label="Permalink to &quot;Nested Function&quot;">​</a></h2><p><code>Danfe</code> allows the declaration of one function inside another function. Following section shows few examples to illustrate the concept.</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-dxiB8" id="tab-nBlQpZ0" checked><label data-title="Engllish" for="tab-nBlQpZ0">Engllish</label><input type="radio" name="group-dxiB8" id="tab-tk9D163"><label data-title="Nepali" for="tab-tk9D163">Nepali</label></div><div class="blocks"><div class="language-danfe vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">danfe</span><pre class="shiki github-dark-high-contrast" style="background-color:#0a0c10;color:#f0f3f6;" tabindex="0"><code><span class="line"><span style="color:#BDC4CC;"># First Function</span></span>
<span class="line"><span style="color:#FF9492;">function</span><span style="color:#DBB7FF;"> greet_me</span><span style="color:#F0F3F6;">(name){</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;">    # Nested Function</span></span>
<span class="line"><span style="color:#FF9492;">    function</span><span style="color:#DBB7FF;"> greet</span><span style="color:#F0F3F6;">(){</span></span>
<span class="line"><span style="color:#FF9492;">        return</span><span style="color:#ADDCFF;"> &quot;Hello from, &quot;</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"><span style="color:#FF9492;">    return</span><span style="color:#DBB7FF;"> greet</span><span style="color:#F0F3F6;">() </span><span style="color:#FF9492;">+</span><span style="color:#F0F3F6;"> name</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">println</span><span style="color:#F0F3F6;">(</span><span style="color:#DBB7FF;">greet_me</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;Danfe&quot;</span><span style="color:#F0F3F6;">))</span></span></code></pre></div><div class="language-danfe vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">danfe</span><pre class="shiki github-dark-high-contrast" style="background-color:#0a0c10;color:#f0f3f6;" tabindex="0"><code><span class="line"><span style="color:#BDC4CC;"># First Function</span></span>
<span class="line"><span style="color:#FF9492;">karya</span><span style="color:#DBB7FF;"> greet_me</span><span style="color:#F0F3F6;">(name){</span></span>
<span class="line"><span style="color:#F0F3F6;">    </span></span>
<span class="line"><span style="color:#BDC4CC;">    # Nested Function</span></span>
<span class="line"><span style="color:#FF9492;">    karya</span><span style="color:#DBB7FF;"> greet</span><span style="color:#F0F3F6;">(){</span></span>
<span class="line"><span style="color:#FF9492;">        pathau</span><span style="color:#ADDCFF;"> &quot;Hello from, &quot;</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"><span style="color:#FF9492;">    pathau</span><span style="color:#DBB7FF;"> greet</span><span style="color:#F0F3F6;">() </span><span style="color:#FF9492;">+</span><span style="color:#F0F3F6;"> name</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBB7FF;">dekhauln</span><span style="color:#F0F3F6;">(</span><span style="color:#DBB7FF;">greet_me</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;Danfe&quot;</span><span style="color:#F0F3F6;">))</span></span></code></pre></div></div></div><div class="language-md vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki github-dark-high-contrast" style="background-color:#0a0c10;color:#f0f3f6;" tabindex="0"><code><span class="line"><span style="color:#91CBFF;font-weight:bold;"># Output</span></span>
<span class="line"><span style="color:#F0F3F6;">Hello from, Danfe</span></span></code></pre></div>`,18)]))}const y=a(o,[["render",p]]);export{u as __pageData,y as default};
