import{_ as a,c as n,a3 as o,o as t}from"./chunks/framework.ohJJpums.js";const y=JSON.parse('{"title":"Built In Functions","description":"","frontmatter":{},"headers":[],"relativePath":"built-in-functions.md","filePath":"built-in-functions.md"}'),l={name:"built-in-functions.md"};function e(p,s,c,r,F,i){return t(),n("div",null,s[0]||(s[0]=[o(`<h1 id="built-in-functions" tabindex="-1">Built In Functions <a class="header-anchor" href="#built-in-functions" aria-label="Permalink to &quot;Built In Functions&quot;">​</a></h1><p>Some functions are builtin like <code>println</code>. Here is the complete list:</p><table tabindex="0"><thead><tr><th><strong>Function</strong></th><th><strong>Syntax</strong></th><th><strong>Info</strong></th></tr></thead><tbody><tr><td><a href="./built-in-functions.html#println"><code>print</code></a></td><td>print(&quot;Hello &quot;, &quot;from &quot;, &quot;Sairash!&quot;)</td><td>prints anything on stdout</td></tr><tr><td><a href="./built-in-functions.html#println"><code>println</code></a></td><td>print(&quot;Hello &quot;, &quot;from &quot;, &quot;Sairash!&quot;)</td><td>prints anything and a newline on stdout</td></tr><tr><td><a href="./built-in-functions.html#input"><code>input</code></a></td><td>input(&quot;How was your day? &quot;)</td><td>lets you await and read user input from a terminal</td></tr><tr><td><a href="./built-in-functions.html#typeof"><code>typeof</code></a></td><td>typeof(identifier)</td><td>the type of argument is returned</td></tr><tr><td><a href="./built-in-functions.html#len"><code>len</code></a></td><td>len(array)</td><td>the length of array, table and string is returned</td></tr><tr><td><a href="./built-in-functions.html#int-float-string"><code>int</code></a></td><td>int(identifier)</td><td>converts the given argument into an int type</td></tr><tr><td><a href="./built-in-functions.html#int-float-string"><code>float</code></a></td><td>float(identifier)</td><td>converts the given argument into an float type</td></tr><tr><td><a href="./built-in-functions.html#int-float-string"><code>string</code></a></td><td>string(identifer)</td><td>converts the given argument into an string type</td></tr><tr><td><a href="./built-in-functions.html#testing"><code>assert</code></a></td><td>assert(&quot;type&quot;, &quot;test_name&quot;, &quot;test_case_1&quot;, &quot;test_case_2 optional&quot;)</td><td>Tests that the program is doing exactly what it&#39;s supposed to do.</td></tr><tr><td><a href="./built-in-functions.html#panic"><code>panic</code></a></td><td>panic(&quot;manually throw an error&quot;)</td><td>can manually throw an error</td></tr><tr><td><a href="./built-in-functions.html#random-generator"><code>rand_int</code></a></td><td>rand_int()</td><td>generates a random i64 number</td></tr><tr><td><a href="./built-in-functions.html#random-generator"><code>rand_str</code></a></td><td>rand_str(length) # length is optional</td><td>generates a random string</td></tr></tbody></table><br><h2 id="println" tabindex="-1">Println <a class="header-anchor" href="#println" aria-label="Permalink to &quot;Println&quot;">​</a></h2><p><code>println</code> is a simple yet powerful builtin function, that can print anything: strings, int, f64, arrays, tables</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-3dADY" id="tab-LTFESMn" checked><label data-title="English" for="tab-LTFESMn">English</label><input type="radio" name="group-3dADY" id="tab-Gtz5zfJ"><label data-title="Nepali" for="tab-Gtz5zfJ">Nepali</label></div><div class="blocks"><div class="language-danfe vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">danfe</span><pre class="shiki github-dark-high-contrast" style="background-color:#0a0c10;color:#f0f3f6;" tabindex="0"><code><span class="line"><span style="color:#BDC4CC;"># print and println are same</span></span>
<span class="line"><span style="color:#FF9492;">println</span><span style="color:#F0F3F6;">(</span><span style="color:#91CBFF;">1</span><span style="color:#F0F3F6;">)    </span><span style="color:#BDC4CC;"># &quot;1&quot;</span></span>
<span class="line"><span style="color:#FF9492;">println</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;Hello &quot;</span><span style="color:#F0F3F6;">, </span><span style="color:#ADDCFF;">&#39;Hi&#39;</span><span style="color:#F0F3F6;">)    </span><span style="color:#BDC4CC;"># &quot;Hello Hi&quot;</span></span>
<span class="line"><span style="color:#FF9492;">println</span><span style="color:#F0F3F6;">([</span><span style="color:#91CBFF;">1</span><span style="color:#F0F3F6;">,</span><span style="color:#91CBFF;">2</span><span style="color:#F0F3F6;">,</span><span style="color:#91CBFF;">3</span><span style="color:#F0F3F6;">])    </span><span style="color:#BDC4CC;"># &quot;[1, 2, 3]&quot;</span></span>
<span class="line"><span style="color:#FF9492;">println</span><span style="color:#F0F3F6;">([</span><span style="color:#ADDCFF;">&quot;user&quot;</span><span style="color:#FF9492;">=&gt;</span><span style="color:#F0F3F6;">[</span><span style="color:#ADDCFF;">&quot;name&quot;</span><span style="color:#FF9492;">=&gt;</span><span style="color:#ADDCFF;">&quot;bob&quot;</span><span style="color:#F0F3F6;">, </span><span style="color:#ADDCFF;">&quot;courses&quot;</span><span style="color:#FF9492;">=&gt;</span><span style="color:#F0F3F6;">[</span><span style="color:#ADDCFF;">&quot;cs&quot;</span><span style="color:#F0F3F6;">,</span><span style="color:#ADDCFF;">&quot;ml&quot;</span><span style="color:#F0F3F6;">]]])    </span><span style="color:#BDC4CC;"># &quot;[user =&gt; [name =&gt; bob, courses =&gt; [cs, ml]]]&quot;</span></span>
<span class="line"></span></code></pre></div><div class="language-danfe vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">danfe</span><pre class="shiki github-dark-high-contrast" style="background-color:#0a0c10;color:#f0f3f6;" tabindex="0"><code><span class="line"><span style="color:#BDC4CC;"># print and println are same</span></span>
<span class="line"><span style="color:#DBB7FF;">dekhauln</span><span style="color:#F0F3F6;">(</span><span style="color:#91CBFF;">1</span><span style="color:#F0F3F6;">)    </span><span style="color:#BDC4CC;"># &quot;1&quot;</span></span>
<span class="line"><span style="color:#DBB7FF;">dekhauln</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;Hello &quot;</span><span style="color:#F0F3F6;">, </span><span style="color:#ADDCFF;">&#39;Hi&#39;</span><span style="color:#F0F3F6;">)    </span><span style="color:#BDC4CC;"># &quot;Hello Hi&quot;</span></span>
<span class="line"><span style="color:#DBB7FF;">dekhauln</span><span style="color:#F0F3F6;">([</span><span style="color:#91CBFF;">1</span><span style="color:#F0F3F6;">,</span><span style="color:#91CBFF;">2</span><span style="color:#F0F3F6;">,</span><span style="color:#91CBFF;">3</span><span style="color:#F0F3F6;">])    </span><span style="color:#BDC4CC;"># &quot;[1, 2, 3]&quot;</span></span>
<span class="line"><span style="color:#DBB7FF;">dekhauln</span><span style="color:#F0F3F6;">([</span><span style="color:#ADDCFF;">&quot;user&quot;</span><span style="color:#FF9492;">=&gt;</span><span style="color:#F0F3F6;">[</span><span style="color:#ADDCFF;">&quot;name&quot;</span><span style="color:#FF9492;">=&gt;</span><span style="color:#ADDCFF;">&quot;bob&quot;</span><span style="color:#F0F3F6;">, </span><span style="color:#ADDCFF;">&quot;courses&quot;</span><span style="color:#FF9492;">=&gt;</span><span style="color:#F0F3F6;">[</span><span style="color:#ADDCFF;">&quot;cs&quot;</span><span style="color:#F0F3F6;">,</span><span style="color:#ADDCFF;">&quot;ml&quot;</span><span style="color:#F0F3F6;">]]])    </span><span style="color:#BDC4CC;"># &quot;[user =&gt; [name =&gt; bob, courses =&gt; [cs, ml]]]&quot;</span></span>
<span class="line"></span></code></pre></div></div></div><h2 id="input" tabindex="-1">Input <a class="header-anchor" href="#input" aria-label="Permalink to &quot;Input&quot;">​</a></h2><p><code>input</code> this function provides a simple way to prompt the user for questions</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-X6iIk" id="tab-9v4-za9" checked><label data-title="English" for="tab-9v4-za9">English</label><input type="radio" name="group-X6iIk" id="tab-bZ_GYxw"><label data-title="Nepali" for="tab-bZ_GYxw">Nepali</label></div><div class="blocks"><div class="language-danfe vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">danfe</span><pre class="shiki github-dark-high-contrast" style="background-color:#0a0c10;color:#f0f3f6;" tabindex="0"><code><span class="line"><span style="color:#FF9492;">input</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;How are you? &quot;</span><span style="color:#F0F3F6;">)    </span><span style="color:#BDC4CC;"># &quot;How Are you&quot;</span></span>
<span class="line"></span></code></pre></div><div class="language-danfe vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">danfe</span><pre class="shiki github-dark-high-contrast" style="background-color:#0a0c10;color:#f0f3f6;" tabindex="0"><code><span class="line"><span style="color:#DBB7FF;">sodha</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;How are you? &quot;</span><span style="color:#F0F3F6;">)    </span><span style="color:#BDC4CC;"># &quot;How Are you&quot;</span></span>
<span class="line"></span></code></pre></div></div></div><h2 id="typeof" tabindex="-1">Typeof <a class="header-anchor" href="#typeof" aria-label="Permalink to &quot;Typeof&quot;">​</a></h2><p><code>type</code> this function returns the type of the value</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-DqXdd" id="tab-usVSU2c" checked><label data-title="English" for="tab-usVSU2c">English</label><input type="radio" name="group-DqXdd" id="tab-2KYPfjR"><label data-title="Nepali" for="tab-2KYPfjR">Nepali</label></div><div class="blocks"><div class="language-danfe vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">danfe</span><pre class="shiki github-dark-high-contrast" style="background-color:#0a0c10;color:#f0f3f6;" tabindex="0"><code><span class="line"><span style="color:#FFB757;">x</span><span style="color:#FF9492;"> =</span><span style="color:#91CBFF;"> 10</span></span>
<span class="line"><span style="color:#FF9492;">println</span><span style="color:#F0F3F6;">(x, </span><span style="color:#ADDCFF;">&quot;, &quot;</span><span style="color:#F0F3F6;">, </span><span style="color:#FF9492;">typeof</span><span style="color:#F0F3F6;">(x), </span><span style="color:#ADDCFF;">&quot;, &quot;</span><span style="color:#F0F3F6;">, </span><span style="color:#FF9492;">typeof</span><span style="color:#F0F3F6;">(</span><span style="color:#FF9492;">typeof</span><span style="color:#F0F3F6;">(x))) </span><span style="color:#BDC4CC;"># 10, int, string</span></span>
<span class="line"></span></code></pre></div><div class="language-danfe vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">danfe</span><pre class="shiki github-dark-high-contrast" style="background-color:#0a0c10;color:#f0f3f6;" tabindex="0"><code><span class="line"><span style="color:#FFB757;">x</span><span style="color:#FF9492;"> =</span><span style="color:#91CBFF;"> 10</span></span>
<span class="line"><span style="color:#DBB7FF;">dekhauln</span><span style="color:#F0F3F6;">(x, </span><span style="color:#ADDCFF;">&quot;, &quot;</span><span style="color:#F0F3F6;">, </span><span style="color:#DBB7FF;">prakar</span><span style="color:#F0F3F6;">(x), </span><span style="color:#ADDCFF;">&quot;, &quot;</span><span style="color:#F0F3F6;">, </span><span style="color:#DBB7FF;">prakar</span><span style="color:#F0F3F6;">(</span><span style="color:#DBB7FF;">prakar</span><span style="color:#F0F3F6;">(x))) </span><span style="color:#BDC4CC;"># 10, int, string</span></span>
<span class="line"></span></code></pre></div></div></div><h2 id="len" tabindex="-1">Len <a class="header-anchor" href="#len" aria-label="Permalink to &quot;Len&quot;">​</a></h2><p><code>len</code> this function returns the length of the value, only works with <code>string</code>, <code>array</code>, <code>table</code></p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-x2BNQ" id="tab-4nbzChX" checked><label data-title="English" for="tab-4nbzChX">English</label><input type="radio" name="group-x2BNQ" id="tab-nEsOqn0"><label data-title="Nepali" for="tab-nEsOqn0">Nepali</label></div><div class="blocks"><div class="language-danfe vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">danfe</span><pre class="shiki github-dark-high-contrast" style="background-color:#0a0c10;color:#f0f3f6;" tabindex="0"><code><span class="line"><span style="color:#FFB757;">x</span><span style="color:#FF9492;"> =</span><span style="color:#F0F3F6;"> [</span><span style="color:#91CBFF;">10</span><span style="color:#F0F3F6;">, </span><span style="color:#91CBFF;">20</span><span style="color:#F0F3F6;">, </span><span style="color:#91CBFF;">30</span><span style="color:#F0F3F6;">]</span></span>
<span class="line"><span style="color:#FF9492;">println</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;Length of x is: &quot;</span><span style="color:#F0F3F6;">, </span><span style="color:#FF9492;">len</span><span style="color:#F0F3F6;">(x)) </span><span style="color:#BDC4CC;"># Length of x is: is 3</span></span>
<span class="line"></span></code></pre></div><div class="language-danfe vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">danfe</span><pre class="shiki github-dark-high-contrast" style="background-color:#0a0c10;color:#f0f3f6;" tabindex="0"><code><span class="line"><span style="color:#FFB757;">x</span><span style="color:#FF9492;"> =</span><span style="color:#F0F3F6;"> [</span><span style="color:#91CBFF;">10</span><span style="color:#F0F3F6;">, </span><span style="color:#91CBFF;">20</span><span style="color:#F0F3F6;">, </span><span style="color:#91CBFF;">30</span><span style="color:#F0F3F6;">]</span></span>
<span class="line"><span style="color:#DBB7FF;">dekauln</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;Length of x is: &quot;</span><span style="color:#F0F3F6;">, </span><span style="color:#DBB7FF;">ginti</span><span style="color:#F0F3F6;">(x)) </span><span style="color:#BDC4CC;"># Length of x is: is 3</span></span>
<span class="line"></span></code></pre></div></div></div><h2 id="int-float-string" tabindex="-1">Int, Float, String <a class="header-anchor" href="#int-float-string" aria-label="Permalink to &quot;Int, Float, String&quot;">​</a></h2><p><code>int</code> this function converts value of type <code>string</code>, <code>float</code> -&gt; <code>int</code> <br><code>float</code> this function converts value of type <code>string</code>, <code>int</code> -&gt; <code>float</code> <br><code>string</code> this function converts <code>any</code> value -&gt; <code>string</code></p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-vb8oq" id="tab-WdHR2QK" checked><label data-title="English" for="tab-WdHR2QK">English</label><input type="radio" name="group-vb8oq" id="tab-w59kCOL"><label data-title="Nepali" for="tab-w59kCOL">Nepali</label></div><div class="blocks"><div class="language-danfe vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">danfe</span><pre class="shiki github-dark-high-contrast" style="background-color:#0a0c10;color:#f0f3f6;" tabindex="0"><code><span class="line"><span style="color:#FFB757;">a</span><span style="color:#FF9492;"> =</span><span style="color:#91CBFF;"> 10</span></span>
<span class="line"><span style="color:#FFB757;">b</span><span style="color:#FF9492;"> =</span><span style="color:#DBB7FF;"> float</span><span style="color:#F0F3F6;">(a)</span></span>
<span class="line"><span style="color:#FFB757;">c</span><span style="color:#FF9492;"> =</span><span style="color:#DBB7FF;"> string</span><span style="color:#F0F3F6;">(a)</span></span>
<span class="line"><span style="color:#FFB757;">d</span><span style="color:#FF9492;"> =</span><span style="color:#DBB7FF;"> int</span><span style="color:#F0F3F6;">(c)</span></span>
<span class="line"><span style="color:#FF9492;">println</span><span style="color:#F0F3F6;">(</span><span style="color:#FF9492;">typeof</span><span style="color:#F0F3F6;">(a), </span><span style="color:#ADDCFF;">&quot;, &quot;</span><span style="color:#F0F3F6;">, </span><span style="color:#FF9492;">typeof</span><span style="color:#F0F3F6;">(b), </span><span style="color:#ADDCFF;">&quot;, &quot;</span><span style="color:#F0F3F6;">, </span><span style="color:#FF9492;">typeof</span><span style="color:#F0F3F6;">(c), </span><span style="color:#ADDCFF;">&quot;, &quot;</span><span style="color:#F0F3F6;">, </span><span style="color:#FF9492;">typeof</span><span style="color:#F0F3F6;">(d))</span></span>
<span class="line"></span></code></pre></div><div class="language-danfe vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">danfe</span><pre class="shiki github-dark-high-contrast" style="background-color:#0a0c10;color:#f0f3f6;" tabindex="0"><code><span class="line"><span style="color:#FFB757;">a</span><span style="color:#FF9492;"> =</span><span style="color:#91CBFF;"> 10</span></span>
<span class="line"><span style="color:#FFB757;">b</span><span style="color:#FF9492;"> =</span><span style="color:#DBB7FF;"> float</span><span style="color:#F0F3F6;">(a)</span></span>
<span class="line"><span style="color:#FFB757;">c</span><span style="color:#FF9492;"> =</span><span style="color:#DBB7FF;"> sabda</span><span style="color:#F0F3F6;">(a)</span></span>
<span class="line"><span style="color:#FFB757;">d</span><span style="color:#FF9492;"> =</span><span style="color:#DBB7FF;"> aanka</span><span style="color:#F0F3F6;">(c)</span></span>
<span class="line"><span style="color:#DBB7FF;">dekhauln</span><span style="color:#F0F3F6;">(</span><span style="color:#DBB7FF;">prakar</span><span style="color:#F0F3F6;">(a), </span><span style="color:#ADDCFF;">&quot;, &quot;</span><span style="color:#F0F3F6;">, </span><span style="color:#DBB7FF;">prakar</span><span style="color:#F0F3F6;">(b), </span><span style="color:#ADDCFF;">&quot;, &quot;</span><span style="color:#F0F3F6;">, </span><span style="color:#DBB7FF;">prakar</span><span style="color:#F0F3F6;">(c), </span><span style="color:#ADDCFF;">&quot;, &quot;</span><span style="color:#F0F3F6;">, </span><span style="color:#DBB7FF;">prakar</span><span style="color:#F0F3F6;">(d))</span></span>
<span class="line"></span></code></pre></div></div></div><div class="language-md vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki github-dark-high-contrast" style="background-color:#0a0c10;color:#f0f3f6;" tabindex="0"><code><span class="line"><span style="color:#91CBFF;font-weight:bold;"># Output</span></span>
<span class="line"><span style="color:#F0F3F6;">int, float, string, int</span></span>
<span class="line"></span></code></pre></div><h2 id="testing" tabindex="-1">Testing <a class="header-anchor" href="#testing" aria-label="Permalink to &quot;Testing&quot;">​</a></h2><p>You can write test cases for with Danfe: which will run only when you add the <code>-t</code> flag.</p><div class="language-danfe vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">danfe</span><pre class="shiki github-dark-high-contrast" style="background-color:#0a0c10;color:#f0f3f6;" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="color:#FFB757;">x</span><span style="color:#FF9492;"> =</span><span style="color:#91CBFF;"> 1</span></span>
<span class="line"><span style="color:#FFB757;">y</span><span style="color:#FF9492;"> =</span><span style="color:#91CBFF;"> 1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">function</span><span style="color:#DBB7FF;"> function_to_panic</span><span style="color:#F0F3F6;">() {</span></span>
<span class="line"><span style="color:#DBB7FF;">    panic</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;This function panics!&quot;</span><span style="color:#F0F3F6;">)</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">assert</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&#39;start&#39;</span><span style="color:#F0F3F6;">, </span><span style="color:#ADDCFF;">&quot;test_case_start&quot;</span><span style="color:#F0F3F6;">) </span><span style="color:#BDC4CC;"># marker for start</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">assert</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&#39;&#39;</span><span style="color:#F0F3F6;">, </span><span style="color:#ADDCFF;">&quot;test_case_&quot;</span><span style="color:#F0F3F6;">, x, y) </span><span style="color:#BDC4CC;"># only shows error</span></span>
<span class="line"><span style="color:#FF9492;">assert</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&#39;print&#39;</span><span style="color:#F0F3F6;">, </span><span style="color:#ADDCFF;">&#39;test_case_to_print_on_pass&#39;</span><span style="color:#F0F3F6;">, x, y) </span><span style="color:#BDC4CC;"># shows errors and also success</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># expect the function to fail</span></span>
<span class="line"><span style="color:#BDC4CC;"># assert can have 1 or 2 test value</span></span>
<span class="line"><span style="color:#FF9492;">assert</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&#39;error&#39;</span><span style="color:#F0F3F6;">, </span><span style="color:#ADDCFF;">&#39;test_case_to_expect_an_error&#39;</span><span style="color:#F0F3F6;">, </span><span style="color:#DBB7FF;">function_to_panic</span><span style="color:#F0F3F6;">())</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">assert</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&#39;info&#39;</span><span style="color:#F0F3F6;">, </span><span style="color:#ADDCFF;">&quot;test_case_change_y_value&quot;</span><span style="color:#F0F3F6;">) </span><span style="color:#BDC4CC;"># marker for info</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFB757;">y</span><span style="color:#FF9492;"> =</span><span style="color:#91CBFF;"> 0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># there shouldn&#39;t be any errors but expect the right and left value to not match</span></span>
<span class="line"><span style="color:#FF9492;">assert</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&#39;mismatch&#39;</span><span style="color:#F0F3F6;">, </span><span style="color:#ADDCFF;">&#39;test_case_to_mismatch&#39;</span><span style="color:#F0F3F6;">, y, x) </span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">assert</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&#39;end&#39;</span><span style="color:#F0F3F6;">, </span><span style="color:#ADDCFF;">&quot;test_case_end&quot;</span><span style="color:#F0F3F6;">) </span><span style="color:#BDC4CC;"># marker for end</span></span>
<span class="line"><span style="color:#FF9492;">assert</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&#39;success&#39;</span><span style="color:#F0F3F6;">, </span><span style="color:#ADDCFF;">&quot;Successfully completed all the tests!&quot;</span><span style="color:#F0F3F6;">) </span><span style="color:#BDC4CC;"># marker for success</span></span>
<span class="line"></span></code></pre></div><div class="language-md vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki github-dark-high-contrast" style="background-color:#0a0c10;color:#f0f3f6;" tabindex="0"><code><span class="line"><span style="color:#91CBFF;font-weight:bold;"># Output</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">🟢 Start : test_case_start</span></span>
<span class="line"><span style="color:#F0F3F6;">✅ PASS  : test_case_to_print_on_pass</span></span>
<span class="line"><span style="color:#F0F3F6;">❎ PASS  : test_case_to_expect_an_error</span></span>
<span class="line"><span style="color:#F0F3F6;">🛈 INFO   : test_case_change_y_value</span></span>
<span class="line"><span style="color:#F0F3F6;">✅ PASS  : test_case_to_mismatch</span></span>
<span class="line"><span style="color:#F0F3F6;">🟩 END   : test_case_end</span></span>
<span class="line"><span style="color:#F0F3F6;">👌 : Successfully completed all the tests!</span></span>
<span class="line"></span></code></pre></div><h2 id="panic" tabindex="-1">Panic <a class="header-anchor" href="#panic" aria-label="Permalink to &quot;Panic&quot;">​</a></h2><p>You can manually exit out of the program using the <code>panic</code> keyword.</p><div class="language-danfe vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">danfe</span><pre class="shiki github-dark-high-contrast" style="background-color:#0a0c10;color:#f0f3f6;" tabindex="0"><code><span class="line"><span style="color:#DBB7FF;">panic</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;User wan&#39;t to exit the program!&quot;</span><span style="color:#F0F3F6;">)</span></span>
<span class="line"></span></code></pre></div><div class="language-md vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki github-dark-high-contrast" style="background-color:#0a0c10;color:#f0f3f6;" tabindex="0"><code><span class="line"><span style="color:#91CBFF;font-weight:bold;"># Output</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">                                      </span></span>
<span class="line"><span style="color:#F0F3F6;">Error Encountered when system -&gt; panic: </span></span>
<span class="line"><span style="color:#F0F3F6;">:0:0: Error: User wan&#39;t to exit the program                                 </span></span>
<span class="line"></span></code></pre></div><h2 id="random-generator" tabindex="-1">Random Generator <a class="header-anchor" href="#random-generator" aria-label="Permalink to &quot;Random Generator&quot;">​</a></h2><p><code>rand_int</code> to generate random numbers and <code>rand_str</code> to generate random strings. <br></p><p>If you don&#39;t send in the <code>length</code> in <code>rand_str</code> it is going to generate string of 10 characters</p><div class="language-danfe vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">danfe</span><pre class="shiki github-dark-high-contrast" style="background-color:#0a0c10;color:#f0f3f6;" tabindex="0"><code><span class="line"><span style="color:#FF9492;">println</span><span style="color:#F0F3F6;">(</span><span style="color:#FF9492;">rand_int</span><span style="color:#F0F3F6;">())   </span><span style="color:#BDC4CC;"># generates i64</span></span>
<span class="line"><span style="color:#FF9492;">println</span><span style="color:#F0F3F6;">(</span><span style="color:#FF9492;">rand_str</span><span style="color:#F0F3F6;">())   </span><span style="color:#BDC4CC;"># generates string of 10 characters</span></span>
<span class="line"><span style="color:#FF9492;">println</span><span style="color:#F0F3F6;">(</span><span style="color:#FF9492;">rand_str</span><span style="color:#F0F3F6;">(</span><span style="color:#91CBFF;">20</span><span style="color:#F0F3F6;">)) </span><span style="color:#BDC4CC;"># generates string of 20 characters</span></span>
<span class="line"></span></code></pre></div><div class="language-md vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki github-dark-high-contrast" style="background-color:#0a0c10;color:#f0f3f6;" tabindex="0"><code><span class="line"><span style="color:#91CBFF;font-weight:bold;"># Output</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">178855189130093954</span></span>
<span class="line"><span style="color:#F0F3F6;">UHsFgWpfrH</span></span>
<span class="line"><span style="color:#F0F3F6;">HlZhFzVDpERimTYUuwJN</span></span>
<span class="line"></span></code></pre></div><p>⚠️ <strong>Many More Coming Soon</strong> ⚠️</p>`,34)]))}const u=a(l,[["render",e]]);export{y as __pageData,u as default};
