import{_ as e,c as s,a3 as n,o}from"./chunks/framework.ohJJpums.js";const h=JSON.parse('{"title":"Execute","description":"","frontmatter":{},"headers":[],"relativePath":"execute.md","filePath":"execute.md"}'),l={name:"execute.md"};function t(c,a,p,i,r,d){return o(),s("div",null,a[0]||(a[0]=[n(`<h1 id="execute" tabindex="-1">Execute <a class="header-anchor" href="#execute" aria-label="Permalink to &quot;Execute&quot;">​</a></h1><p>Currently there are <code>few ways</code> to exeucte a Danfe Program.</p><ul><li>Directly execute it in <a href="/repl.html">Danfe REPL</a></li><li>Save the program in a file ending with <code>.df</code> extension and run the command <code>./danfe run file_name.df</code>.</li><li>By using Shebang #! in Linux Scripts.</li></ul><hr><h3 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h3><ol><li>Open file ending with <code>.df</code> extension to <code>edit</code>.</li></ol><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark-high-contrast" style="background-color:#0a0c10;color:#f0f3f6;" tabindex="0"><code><span class="line"><span style="color:#FFB757;">$</span><span style="color:#ADDCFF;"> nano</span><span style="color:#ADDCFF;"> main.df</span></span>
<span class="line"></span></code></pre></div><ol start="2"><li>Write your <a href="/hello-world.html">Hello World</a> <code>Danfe</code> program in the file.</li></ol><div class="language-danfe vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">danfe</span><pre class="shiki github-dark-high-contrast" style="background-color:#0a0c10;color:#f0f3f6;" tabindex="0"><code><span class="line"><span style="color:#FF9492;">println</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;Hello World&quot;</span><span style="color:#F0F3F6;">)</span></span>
<span class="line"></span></code></pre></div><ol start="3"><li>Execute the file using the <code>danfe</code> binary.</li></ol><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark-high-contrast" style="background-color:#0a0c10;color:#f0f3f6;" tabindex="0"><code><span class="line"><span style="color:#FFB757;">$</span><span style="color:#ADDCFF;"> danfe</span><span style="color:#ADDCFF;"> run</span><span style="color:#ADDCFF;"> main.df</span></span>
<span class="line"></span></code></pre></div><ol start="4"><li>After executing the program.</li></ol><div class="language-md vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki github-dark-high-contrast" style="background-color:#0a0c10;color:#f0f3f6;" tabindex="0"><code><span class="line"><span style="color:#91CBFF;font-weight:bold;"># Output:</span></span>
<span class="line"><span style="color:#F0F3F6;">Hello World</span></span>
<span class="line"></span></code></pre></div><hr><h3 id="you-can-even-use-shebang-in-linux-scripts" tabindex="-1">You can even use Shebang #! in Linux Scripts <a class="header-anchor" href="#you-can-even-use-shebang-in-linux-scripts" aria-label="Permalink to &quot;You can even use Shebang #! in Linux Scripts&quot;">​</a></h3><p>In Linux, you can convert a Danfe program into a <code>self executable script</code>. The first statement in the code should be a <code>shebang #!</code>. It must contain the path to <code>Danfe Executable</code>.</p><div class="language-danfe vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">danfe</span><pre class="shiki github-dark-high-contrast" style="background-color:#0a0c10;color:#f0f3f6;" tabindex="0"><code><span class="line"><span style="color:#BDC4CC;">#!/usr/bin/danfe run</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">println</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;Hello World&quot;</span><span style="color:#F0F3F6;">)</span></span>
<span class="line"></span></code></pre></div><p>You also need to give the file executable permission by using the <code>chmod +x</code> command</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark-high-contrast" style="background-color:#0a0c10;color:#f0f3f6;" tabindex="0"><code><span class="line"><span style="color:#FFB757;">$</span><span style="color:#ADDCFF;"> chmod</span><span style="color:#ADDCFF;"> +x</span><span style="color:#ADDCFF;"> hello.df</span></span>
<span class="line"></span></code></pre></div><p>Then, you can run the program with following command line −</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark-high-contrast" style="background-color:#0a0c10;color:#f0f3f6;" tabindex="0"><code><span class="line"><span style="color:#FFB757;">$</span><span style="color:#ADDCFF;"> ./hello.df</span></span>
<span class="line"></span></code></pre></div><p>This will display the following output</p><div class="language-md vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki github-dark-high-contrast" style="background-color:#0a0c10;color:#f0f3f6;" tabindex="0"><code><span class="line"><span style="color:#91CBFF;font-weight:bold;"># Output:</span></span>
<span class="line"><span style="color:#F0F3F6;">Hello World</span></span>
<span class="line"></span></code></pre></div>`,23)]))}const g=e(l,[["render",t]]);export{h as __pageData,g as default};
